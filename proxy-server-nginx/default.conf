# Nginx will serve as proxy server. It will also serve static files for web application.

# Define the upstream server (Django app)
upstream birthday-tracker-platform {
    server birthday-tracker:8000;
}

# Define the upstream server (Portfolio app)
# upstream vsw-portfolio-app {
#     server vsw-portfolio:3000;
# }

# add all your applications here. Nginx will balance requests.
server {
    # listen 80;
    server_name vsw.digital;

    listen 443 ssl;
    # ssl on;
    ssl_certificate /etc/ssl/vsw.digital/certificate_fi.crt;
    ssl_certificate_key /etc/ssl/vsw.digital/private.key;

    location / {
      proxy_pass http://birthday-tracker-platform;  # Points to the Django service
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }

    # For serving static files using Nginx
    location /static/ {
        # Mapping to volume created in docker compose, which will serve all static files.
        alias /static/;
    }

    # For serving media using Nginx
    location /media/ {
        # Mapping to volume created in docker compose, which will serve all media files.
        alias /media/; 
    }
}

# Permanently redirect http request to https server.
server {

    listen 80 default_server;

    server_name vsw.digital;

    return 301 https://vsw.digital$request_uri;

}

server {
    # listen 80;
    server_name portfolio.vsw.digital;

    listen 443 ssl;
    # ssl on;
    ssl_certificate /etc/ssl/portfolio.vsw.digital/certificate_fi.crt;
    ssl_certificate_key /etc/ssl/portfolio.vsw.digital/private.key;

    location / {
    #   proxy_pass http://vsw-portfolio-app;  # Points to the React service
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;

        root /etc/coming_soon/;
        index coming-soon.html;
    }
}